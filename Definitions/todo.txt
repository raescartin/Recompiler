-sqrt
-add arrays of nodes to definition
-interseccion entre iteraciones de los bucles
-todo: recursive intersection merge (if/rif)
-fix eval of definitions
	-eval subnodes(children) of nodes if there are
	-consistent values when 1="1" 1{0} 1{1} and 1{2} (dividing undivisible nodes)
	-execute definition (to test) -> first iteration of recursive instances should be executed with missing inputs(rif==if)
-explore toBest  interaction with subnodes in instances (when can it be optimized?)
-use mapLeft and mapRight INSTEAD of splitChildren()




-independent size of variables 0(n)=0(1) (->cmp ->eq0 ->if) <-> recursive def if?¿
	-test a nand with one in bigger than the other (+nodes)
	-fill with 0 on left if the size of one input is less than expected (ifdef)
-Optimize dropping ops before logical one or zero (already?). Remember to conserve size.
	-short-circuited?



DONE
-change subnodes and supernodes to parents and children
-nodeFission
-nodeFussion
FIX rootIn: 2 posibilites: 
1- change rootIn to "used in"
2- fix rootIn by traversing parents of root node
	i) remove rootIn of instanced root definition
	ii) trasnform
	iii) set rootIn of instance root to definition
-fix toBest to work with subnodes
-get mul to work
	mul(a,b;c) d=0 add(a,d,d) b times c=d
	recursive mul:
	mul(a,b,c)= mul(a,b-1,d)&add(d,a,c)
-flatten on node eval (unique nodes)